package frame;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import code.Book;
import code.BookManager;

public class BookFrame extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param modal
     */
    Book bookItem = new Book();
    BookManager bookManager = new BookManager();

    public BookFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        new Home().setVisible(false);
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(HIDE_ON_CLOSE);

        loadBooks();
        fillInBookTable();

 

    }

    public BookFrame() {
    }

    public void saveBooks() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("Books.dat"))) {
            oos.writeObject(bookManager.getBookList());
            //JOptionPane.showMessageDialog(this, "Books saved successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving: " + e.getMessage());
        }
    }

    public void loadBooks() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("Books.dat"))) {
            bookManager.setBookList((ArrayList<Book>) ois.readObject());
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Error loading.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        deletePop = new javax.swing.JMenuItem();
        editPop = new javax.swing.JMenuItem();
        jPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        iDJLabel = new javax.swing.JLabel();
        bookIdJTxt = new javax.swing.JTextField();
        nameJLabel = new javax.swing.JLabel();
        bookNameJTxt = new javax.swing.JTextField();
        typeJLabel = new javax.swing.JLabel();
        bookTypeJTxt = new javax.swing.JTextField();
        priceJLabel = new javax.swing.JLabel();
        bookPriceJTxt = new javax.swing.JTextField();
        quantityLabel = new javax.swing.JLabel();
        quantityJTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        deletePop.setText("Delete\n");
        deletePop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePopMouseClicked(evt);
            }
        });
        deletePop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePopActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deletePop);

        editPop.setText("Edit");
        editPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPopActionPerformed(evt);
            }
        });
        jPopupMenu1.add(editPop);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Book Management");
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        jPanel.setBackground(new java.awt.Color(204, 204, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Type", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);
        if (bookTable.getColumnModel().getColumnCount() > 0) {
            bookTable.getColumnModel().getColumn(0).setPreferredWidth(2);
            bookTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            bookTable.getColumnModel().getColumn(2).setPreferredWidth(40);
            bookTable.getColumnModel().getColumn(3).setPreferredWidth(10);
            bookTable.getColumnModel().getColumn(4).setPreferredWidth(25);
        }

        jLabel1.setBackground(new java.awt.Color(138, 138, 219));
        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(138, 138, 219));
        jLabel1.setText("Search:");

        searchTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        iDJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        iDJLabel.setForeground(new java.awt.Color(139, 139, 221));
        iDJLabel.setText("ID:");

        bookIdJTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        bookIdJTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookIdJTxtActionPerformed(evt);
            }
        });

        nameJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        nameJLabel.setForeground(new java.awt.Color(138, 138, 219));
        nameJLabel.setText("Name:");

        bookNameJTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        bookNameJTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNameJTxtActionPerformed(evt);
            }
        });

        typeJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        typeJLabel.setForeground(new java.awt.Color(138, 138, 219));
        typeJLabel.setText("Type:");

        bookTypeJTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));

        priceJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        priceJLabel.setForeground(new java.awt.Color(138, 138, 219));
        priceJLabel.setText("Price:");

        bookPriceJTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));

        quantityLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        quantityLabel.setForeground(new java.awt.Color(138, 138, 219));
        quantityLabel.setText("Quantity:");

        quantityJTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        addBtn.setBackground(new java.awt.Color(153, 153, 255));
        addBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(153, 153, 255));
        saveBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 153, 255));
        clearBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(iDJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(typeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(quantityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(priceJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityJTxt)
                            .addComponent(bookPriceJTxt)
                            .addComponent(bookTypeJTxt)
                            .addComponent(bookIdJTxt)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(bookNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iDJLabel)
                    .addComponent(bookIdJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJLabel)
                    .addComponent(bookNameJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTypeJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeJLabel))
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceJLabel)
                    .addComponent(bookPriceJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(quantityJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 255));
        jLabel3.setText("Book Management");

        backButton.setBackground(new java.awt.Color(153, 153, 255));
        backButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        if (evt.getClickCount() == 2) {
            jPopupMenu1.show(bookTable, evt.getX(), evt.getY() + (bookTable.getSelectedRow()) * 25);

        }
    }//GEN-LAST:event_bookTableMouseClicked

    private void deletePopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePopMouseClicked
    }//GEN-LAST:event_deletePopMouseClicked

    private void deletePopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePopActionPerformed

        int selectedRow = bookTable.getSelectedRow();
        if (selectedRow >= 0) {
            String bookId = (String) bookTable.getValueAt(selectedRow, 0); //first column is first ID
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Delete this book?", "Delete Confirmation",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                Book item = bookManager.findBookItemById(bookId);

                if (item != null) {
                    bookManager.getBookList().remove(item);
                    ((DefaultTableModel) bookTable.getModel()).removeRow(selectedRow);
                    saveBooks();
                    JOptionPane.showMessageDialog(this, "Book deleted.");
                } else {
                    JOptionPane.showMessageDialog(this, "Book not found.", "Deletion Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.", "No Selection",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deletePopActionPerformed

    private void editPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPopActionPerformed
        getDataFromTable();
    }//GEN-LAST:event_editPopActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        int selectedRow = bookTable.getSelectedRow();

        if (selectedRow != -1) {
            Book itemToEdit = bookManager.findBookItemById(bookIdJTxt.getText());

            if (itemToEdit != null) {
                itemToEdit.setBookName(bookNameJTxt.getText());
                itemToEdit.setBookType(bookTypeJTxt.getText());
                try {
                    double price = Double.parseDouble(bookPriceJTxt.getText());
                    int quantity = Integer.parseInt(quantityJTxt.getText()); // Capture quantity from the UI

                    itemToEdit.setPrice(price);
                    itemToEdit.setQuantity(quantity); // Update quantity

                    DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
                    model.setValueAt(itemToEdit.getBookName(), selectedRow, 1);
                    model.setValueAt(itemToEdit.getBookType(), selectedRow, 2);
                    model.setValueAt(itemToEdit.getPrice(), selectedRow, 3);
                    model.setValueAt(itemToEdit.getQuantity(), selectedRow, 4);

                    saveBooks();

                    JOptionPane.showMessageDialog(this, "Book updated.");

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Invalid numbers for price and quantity.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Book not found.", "Update Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select book to edit.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_saveBtnActionPerformed
    // TODO add your handling code here:

    private void bookNameJTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNameJTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNameJTxtActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed
    private void getDataFromTable() {
        int selectedRow = bookTable.getSelectedRow();
        if (selectedRow != -1) {
            Book fi = bookManager.getBookList().get(selectedRow);

            bookIdJTxt.setText(fi.getBookId());
            bookNameJTxt.setText(fi.getBookName());
            bookTypeJTxt.setText(fi.getBookType());
            bookPriceJTxt.setText(String.valueOf(fi.getPrice()));
            quantityJTxt.setText(String.valueOf(fi.getQuantity()));

            bookIdJTxt.setEditable(false);
        }
    }

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchTxtKeyReleased

        String searchText = searchTxt.getText().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        model.setRowCount(0);

        bookManager.getBookList().stream()
                .filter(book -> book.getBookName().toLowerCase().contains(searchText)
                || book.getBookType().toLowerCase().contains(searchText))
                .forEach(filteredBook -> {
                    model.addRow(new Object[]{
                        filteredBook.getBookId(),
                        filteredBook.getBookName(),
                        filteredBook.getBookType(),
                        filteredBook.getPrice(),
                        filteredBook.getQuantity()
                    });
                });

    }// GEN-LAST:event_searchTxtKeyReleased

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchBtnActionPerformed

    }// GEN-LAST:event_searchBtnActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_searchTxtActionPerformed

    private void bookIdJTxtActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bookIdJTxtActionPerformed

    }// GEN-LAST:event_bookIdJTxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addBtnActionPerformed

        String bookId = bookIdJTxt.getText();
        String bookName = bookNameJTxt.getText();
        String bookType = bookTypeJTxt.getText();
        String bookPriceText = bookPriceJTxt.getText();
        String quantityText = quantityJTxt.getText();

        if (bookId.isEmpty() || bookName.isEmpty() || bookType.isEmpty() || bookPriceText.isEmpty() || quantityText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill all information!", "Announcement", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                double bookPrice = Double.parseDouble(bookPriceText);
                int quantity = Integer.parseInt(quantityText);

                Book fi = new Book(bookId, bookName, bookPrice, bookType, quantity);

                if (bookManager.addBookItem(fi)) {
                    bookManager.getBookList().add(fi);
                    JOptionPane.showMessageDialog(this, "Add successful.");
                    saveBooks();
                } else {
                    JOptionPane.showMessageDialog(this, "ID was used!");
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid price and quantity.", "Invalid Input",
                        JOptionPane.ERROR_MESSAGE);
            }
            loadBooks();
            fillInBookTable();

        }// GEN-LAST:event_addBtnActionPerformed
    }

    private void fillInBookTable() {
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        int rowCount = model.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        for (Book fi : bookManager.getBookList()) {
            Object[] row = new Object[]{
                fi.getBookId(),
                fi.getBookName(),
                fi.getBookType(),
                fi.getPrice(),
                fi.getQuantity()
            };
            model.addRow(row);
        }
        pack();
    }

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_clearBtnActionPerformed
        bookIdJTxt.setText("");
        bookNameJTxt.setText("");
        bookTypeJTxt.setText("");
        bookPriceJTxt.setText("");
        quantityJTxt.setText("");
        bookIdJTxt.setEditable(true);
    }// GEN-LAST:event_clearBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_refreshBtnActionPerformed
        loadBooks();
        fillInBookTable();
    }// GEN-LAST:event_refreshBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_editBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bookIdJTxt;
    private javax.swing.JTextField bookNameJTxt;
    private javax.swing.JTextField bookPriceJTxt;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField bookTypeJTxt;
    private javax.swing.JButton clearBtn;
    private javax.swing.JMenuItem deletePop;
    private javax.swing.JMenuItem editPop;
    private javax.swing.JLabel iDJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JLabel priceJLabel;
    private javax.swing.JTextField quantityJTxt;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel typeJLabel;
    // End of variables declaration//GEN-END:variables
}
